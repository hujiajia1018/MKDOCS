{
    "config": {
        "lang": [
            "en"
        ], 
        "prebuild_index": false, 
        "separator": "[\\s\\-]+"
    }, 
    "docs": [
        {
            "location": "", 
            "text": "钱台支付对接文档3.3.1 变更记录 版本号 状态 修改点说明 变更确认 日期 QT1.1 试用 初版试用版 2018/01/16 QT1.2 新增小程序 2018/02/07 QT1.3 变更公众号获取oauth_code，增加场景说明 2018/03/14 QT2.0 增加海外支付类型支持/时区示例 2018/09/13 QT3.0 增加pay_tag参数 2018/09/21 QT3.1 新增添加订单备注接口 2018/10/11 QT3.2 英文版板式更新 2018/10/24 QT3.3 新增APP支付与NETSPAY扫码支付 2018/11/08 QT3.3.1 完善APP支付流程 2018/11/13 在进行钱台接口对接前，请仔细参阅此文档中“ 开发指南 ”部分内容，包含环境说明、请求签名方式、请求说明、返回验签、异步通知等内容，然后可根据实际接入支付需求，参阅对应的支付部分内容，涵盖公众号、服务窗、微信支付宝的被扫、主扫等支付方式的调用。退款发起、查询等接口支持，可见本文档中“ API说明 ”。", 
            "title": "变更记录"
        }, 
        {
            "location": "API-Instructions/", 
            "text": "API说明 # 订单支付 # 基本请求信息： 请求方式 Http的Post方式 请求地址 /trade/v1/payment 描述信息 发起消费交易接口 请求参数说明： 参数名 是否必须 说明 txamt 是 订单支付金额，单位分, 即100=$1 txcurrcd 是 币种 港币：HKD ；人民币：CNY；日元：JPY；美元：USD；迪拉姆：AED；泰铢：THB； pay_type 是 支付类型 支付宝扫码:800101； 支付宝反扫:800108；支付宝服务窗：800107；微信扫码:800201； 微信刷卡:800208； 微信公众号:800207； out_trade_no 是 外部订单号，开发者定义订单号。同子商户（mchid）下，每次成功调用支付（含退款）接口，该参数值均不能重复使用，保证单号唯一，长度不超过128字符 txdtm 是 请求交易时间 格式为：YYYY-MM-DD HH:MM:SS goods_name 是 商品名称标示，建议不超过20字，不含英文逗号等特殊字符 mchid 是 子商户号，标识子商户身份，由钱方分配（渠道系统后台查看对应商户(非业务员)子商户号，被视为对应商户的交易）。 openid 否 支付宝的openid，支付宝服务窗需要传该参数 sub_openid 否 微信的openid，微信公众号支付需要传该参数 auth_code 否 微信、支付宝刷卡（被扫）需要传递该参数 txzone 否 时区，用于记录本地下单时间，默认为北京时间+0800 return_url 否 支付成功后的订单异步回调地址。 limit_pay 否 微信扫码或公众号支付时，该参数值指定为no_credit，则禁止使用信用卡支付 udid 否 设备唯一id，长度不超过40字符 应答参数说明： 参数名 说明 syssn 钱方订单号； out_trade_no 外部订单号，开发者平台订单号； txamt 订单支付金额，单位分, 即100=$1 txcurrcd 币种 港币：HKD ；人民币：CNY； pay_type 支付类型 支付宝扫码:800101； 支付宝反扫:800108；支付宝服务窗：800107；微信扫码:800201； 微信刷卡:800208； 微信公众号支付:800207； txdtm 请求交易时间 格式为：YYYY-MM-DD HH:MM:SS sysdtm 系统时间 qrcode 扫码时返回，二维码url； pay_params 唤起微信公众号、支付宝服务窗支付的参数，800207微信公众号、800107支付宝服务窗返回 订单查询 # 说明： 发起交易后，需要调用查询接口，获取订单的状态，直到钱方返回具体的状态信息为止，根据订单的状态进行相应的处理。 默认不支持隔月订单查询，若查询隔月订单，需传入start_time、end_time（时间区间包含sysdtm时间，且区间不能跨月）参数，建议以syssn为条件进行查询。 基本请求信息： 请求方式 Http的Post或者Get方式 请求地址 /trade/v1/query 描述信息 查询交易信息接口 请求参数说明： 参数名 是否必须 说明 mchid 是 子商户号，标识子商户身份，由钱方统一分配； syssn 否 钱方订单号查询，多个以英文逗号区分开； out_trade_no 否 外部订单号查询，开发者平台订单号； pay_type 否 按支付类型查询，多个以英文逗号区分开 支付宝扫码:800101； 支付宝反扫:800108；支付宝服务窗：800107；微信扫码:800201； 微信刷卡:800208； 微信公众号支付:800207； respcd 否 交易返回码，默认返回所有返回码状态的订单 start_time 否 开始时间，默认本月开始 格式为：YYYY-MM-DD HH:MM:SS end_time 否 结束时间，默认本月结束 格式为：YYYY-MM-DD HH:MM:SS txzone 否 时区，用于记录本地下单时间，默认为北京时间+0800 page 否 页数，默认1 page_size 否 每页显示数量，默认显示10笔订单 应答参数说明： 参数名 说明 page 页数 resperr 下单结果描述 page_size 每页显示数量 respcd 下单请求结果返回码 0000表示下单成功 data 交易数据，为list，其中字段描述如下 data字段说明： 参数名 说明 syssn 钱方订单号 out_trade_no 外部订单号，开发者平台订单号 pay_type 支付类型，多个以英文逗号区分开 支付宝扫码:800101； 支付宝反扫:800108；支付宝服务窗：800107；微信扫码:800201； 微信刷卡:800208； 微信公众号支付:800207； order_type 订单类型 支付的订单：payment；退款的订单：refund；关闭的订单：close； txdtm 请求交易时间 格式为：YYYY-MM-DD HH:MM:SS txamt 订单支付金额，单位分, 即100=$1 sysdtm 系统交易时间 cancel 撤销/退款标记 正常交易：0；已撤销：2；已退货：3 respcd 支付结果返回码 0000表示交易支付成功； 1143、1145表示交易中，需继续查询交易结果； 其他返回码表示失败 errmsg 支付结果描述 data内的respcd参数返回码0000表示支付交易成功，data外的respcd参数返回码0000表示请求下单成功。 应答示例： { respmsg : , resperr : \\u8bf7\\u6c42\\u6210\\u529f , respcd : 0000 , data : [ { pay_type : 800208 , sysdtm : 2018-01-12 17:10:26 , order_type : payment , txcurrcd : CNY , txdtm : 2018-01-12 17:10:32 , txamt : 1 , out_trade_no : 1301459478787530052 , syssn : 20180112000100020001659358 , cancel : 0 , respcd : 0000 , errmsg : \\u4ea4\\u6613\\u6210\\u529f } ], page : 1, page_size : 10 } 订单退款 # 退款说明：退款的发起是一笔退款订单，发起退款商户当日交易余额需大于退款订单金额，建议发起退款对应原订单的syssn订单号时间与本次发起退款的时间间隔不超过30天。 基本请求信息： 请求方式 Http的Post方式 请求地址 /trade/v1/refund 描述信息 用于对已支付订单进行退款操作 请求参数说明： 参数名 是否必须 说明 syssn 是 钱方订单号，退款对应的原订单syssn out_trade_no 是 外部订单号，同子商户（mchid）下，每次成功调用支付与退款接口，该参数值均不能重复使用，也不能与支付时的外部订单号相同，保证单号唯一，长度不超过128字符。 txamt 是 订单支付金额，单位分, 即100=$1 txdtm 是 请求交易时间 格式为：YYYY-MM-DD HH:MM:SS mchid 是 子商户号，标识子商户身份，由钱方统一分配 txzone 否 时区，用于记录本地下单时间，默认为北京时间+0800 return_url 否 支付成功后的订单异步回调地址。 udid 否 设备唯一id 应答参数说明： 参数名 说明 syssn 退款交易唯一流水号 orig_syssn 原订交易流水号 txamt 订单支付金额，单位分, 即100=$1 txdtm 请求方交易时间 格式为：YYYY-mm-dd HH:MM:DD sysdtm 系统时间 应答示例： { orig_syssn : 20180112000100020001659358 , sysdtm : 2018-01-12 19:03:23 , cardcd : , txdtm : 2018-01-12 19:03:29 , resperr : \\u4ea4\\u6613\\u6210\\u529f , txcurrcd : CNY , txamt : 1 , respmsg : , out_trade_no : 13014597435743348787530052 , syssn : 20180112000100020001661542 , respcd : 0000 } 订单关闭 # ① 什么状态的订单可以关闭？ 扫码支付与公众号支付，若订单支付未成功，可关闭； 若订单已支付成功，原则上不建议调用关闭订单接口，因银行对于该订单支持标准不一致，很可能导致关闭失败。 刷卡支付，订单支付未成功，都可以关闭订单；若支付成功的同时，调用关闭订单接口，实际是微信的撤销API，此订单支付的款项就会原路返回。 ②关闭订单应用场景 关闭订单只是适用于当时，主要是为了避免重复支付。 为了避免造成各种未知问题，请不要把关闭订单接口当做退款接口使用。 基本请求信息： 请求方式 Http的Post方式 请求地址 /trade/v1/close 描述信息 关闭交易接口 请求参数说明： 参数名 是否必须 说明 mchid 是 子商户号，标识子商户身份，由钱方统一分配。 txamt 是 订单支付金额，单位分, 即100=$1 txdtm 是 请求交易时间 格式为：YYYY-MM-DD HH:MM:SS syssn 否 钱方订单号 其中参数syssn与out_trade_no至少传递一个 out_trade_no 否 外部订单号， 其中参数syssn与out_trade_no至少传递一个 txzone 否 时区，用于记录本地下单时间，默认为北京时间+0800 udid 否 设备唯一id 应答参数说明： 参数名 说明 syssn 钱方关闭交易生成的唯一订单号 orig_syssn 原交易钱方订单号，对应被关闭原订单syssn txamt 订单支付金额，单位分, 即100=$1 txdtm 请求交易时间 格式为：YYYY-mm-dd HH:MM:DD sysdtm 系统交易时间 应答示例： { orig_syssn : 20180112000100020001659801 , sysdtm : 2018-01-12 19:07:02 , cardcd : , txdtm : 2018-01-12 19:07:09 , resperr : \\u4ea4\\u6613\\u6210\\u529f , txcurrcd : CNY , txamt : 1 , respmsg : , syssn : 20180112000100020001661611 , respcd : 0000 } 注：关闭订单非通用支持，可能出现不支持关闭订单的情况，若关闭订单应答返回码为“1297”或返回内容无syssn字段（注：不是orig_syssn），说明该交易不支持关闭订单，如果用户已成功支付，可调用[退款接口](#订单退款)进行退款。 订单备注 # 说明 ：给订单添加交易备注；注意：不支持渠道模式的商户添加备注 基本请求信息 ： 请求方式 Http的Post方式 请求地址 /trade/v1/add_note 描述信息 为订单添加备注 请求参数说明： 参数名 是否必须 说明 code 是 钱方提供的商户code syssn 是 交易成功后钱方返回的订单号 note 是 需要添加的备注信息，不超过200个字符 返回参数示例： { resperr : , respcd : 0000 , respmsg : , data :{}} 下载对账单 # 说明： 渠道隔日下载清算对账单，以自然日为单位，包含每家商户的账单信息。 只能在正式环境上请求才可以，返回内容文件为zip格式压缩包文件。 基本请求信息： 请求方式 Http的Get方式 请求地址 /download/v1/trade_bill 描述信息 通过接口获取对账单文件，保存为zip文件 请求参数说明： 参数名 是否必须 说明 trade_date 是 获取对账单的具体日期 如2017-10-17", 
            "title": "API说明"
        }, 
        {
            "location": "API-Instructions/#api", 
            "text": "", 
            "title": "API说明"
        }, 
        {
            "location": "API-Instructions/#_1", 
            "text": "基本请求信息： 请求方式 Http的Post方式 请求地址 /trade/v1/payment 描述信息 发起消费交易接口 请求参数说明： 参数名 是否必须 说明 txamt 是 订单支付金额，单位分, 即100=$1 txcurrcd 是 币种 港币：HKD ；人民币：CNY；日元：JPY；美元：USD；迪拉姆：AED；泰铢：THB； pay_type 是 支付类型 支付宝扫码:800101； 支付宝反扫:800108；支付宝服务窗：800107；微信扫码:800201； 微信刷卡:800208； 微信公众号:800207； out_trade_no 是 外部订单号，开发者定义订单号。同子商户（mchid）下，每次成功调用支付（含退款）接口，该参数值均不能重复使用，保证单号唯一，长度不超过128字符 txdtm 是 请求交易时间 格式为：YYYY-MM-DD HH:MM:SS goods_name 是 商品名称标示，建议不超过20字，不含英文逗号等特殊字符 mchid 是 子商户号，标识子商户身份，由钱方分配（渠道系统后台查看对应商户(非业务员)子商户号，被视为对应商户的交易）。 openid 否 支付宝的openid，支付宝服务窗需要传该参数 sub_openid 否 微信的openid，微信公众号支付需要传该参数 auth_code 否 微信、支付宝刷卡（被扫）需要传递该参数 txzone 否 时区，用于记录本地下单时间，默认为北京时间+0800 return_url 否 支付成功后的订单异步回调地址。 limit_pay 否 微信扫码或公众号支付时，该参数值指定为no_credit，则禁止使用信用卡支付 udid 否 设备唯一id，长度不超过40字符 应答参数说明： 参数名 说明 syssn 钱方订单号； out_trade_no 外部订单号，开发者平台订单号； txamt 订单支付金额，单位分, 即100=$1 txcurrcd 币种 港币：HKD ；人民币：CNY； pay_type 支付类型 支付宝扫码:800101； 支付宝反扫:800108；支付宝服务窗：800107；微信扫码:800201； 微信刷卡:800208； 微信公众号支付:800207； txdtm 请求交易时间 格式为：YYYY-MM-DD HH:MM:SS sysdtm 系统时间 qrcode 扫码时返回，二维码url； pay_params 唤起微信公众号、支付宝服务窗支付的参数，800207微信公众号、800107支付宝服务窗返回", 
            "title": "订单支付"
        }, 
        {
            "location": "API-Instructions/#_2", 
            "text": "说明： 发起交易后，需要调用查询接口，获取订单的状态，直到钱方返回具体的状态信息为止，根据订单的状态进行相应的处理。 默认不支持隔月订单查询，若查询隔月订单，需传入start_time、end_time（时间区间包含sysdtm时间，且区间不能跨月）参数，建议以syssn为条件进行查询。 基本请求信息： 请求方式 Http的Post或者Get方式 请求地址 /trade/v1/query 描述信息 查询交易信息接口 请求参数说明： 参数名 是否必须 说明 mchid 是 子商户号，标识子商户身份，由钱方统一分配； syssn 否 钱方订单号查询，多个以英文逗号区分开； out_trade_no 否 外部订单号查询，开发者平台订单号； pay_type 否 按支付类型查询，多个以英文逗号区分开 支付宝扫码:800101； 支付宝反扫:800108；支付宝服务窗：800107；微信扫码:800201； 微信刷卡:800208； 微信公众号支付:800207； respcd 否 交易返回码，默认返回所有返回码状态的订单 start_time 否 开始时间，默认本月开始 格式为：YYYY-MM-DD HH:MM:SS end_time 否 结束时间，默认本月结束 格式为：YYYY-MM-DD HH:MM:SS txzone 否 时区，用于记录本地下单时间，默认为北京时间+0800 page 否 页数，默认1 page_size 否 每页显示数量，默认显示10笔订单 应答参数说明： 参数名 说明 page 页数 resperr 下单结果描述 page_size 每页显示数量 respcd 下单请求结果返回码 0000表示下单成功 data 交易数据，为list，其中字段描述如下 data字段说明： 参数名 说明 syssn 钱方订单号 out_trade_no 外部订单号，开发者平台订单号 pay_type 支付类型，多个以英文逗号区分开 支付宝扫码:800101； 支付宝反扫:800108；支付宝服务窗：800107；微信扫码:800201； 微信刷卡:800208； 微信公众号支付:800207； order_type 订单类型 支付的订单：payment；退款的订单：refund；关闭的订单：close； txdtm 请求交易时间 格式为：YYYY-MM-DD HH:MM:SS txamt 订单支付金额，单位分, 即100=$1 sysdtm 系统交易时间 cancel 撤销/退款标记 正常交易：0；已撤销：2；已退货：3 respcd 支付结果返回码 0000表示交易支付成功； 1143、1145表示交易中，需继续查询交易结果； 其他返回码表示失败 errmsg 支付结果描述 data内的respcd参数返回码0000表示支付交易成功，data外的respcd参数返回码0000表示请求下单成功。 应答示例： { respmsg : , resperr : \\u8bf7\\u6c42\\u6210\\u529f , respcd : 0000 , data : [ { pay_type : 800208 , sysdtm : 2018-01-12 17:10:26 , order_type : payment , txcurrcd : CNY , txdtm : 2018-01-12 17:10:32 , txamt : 1 , out_trade_no : 1301459478787530052 , syssn : 20180112000100020001659358 , cancel : 0 , respcd : 0000 , errmsg : \\u4ea4\\u6613\\u6210\\u529f } ], page : 1, page_size : 10 }", 
            "title": "订单查询"
        }, 
        {
            "location": "API-Instructions/#_3", 
            "text": "退款说明：退款的发起是一笔退款订单，发起退款商户当日交易余额需大于退款订单金额，建议发起退款对应原订单的syssn订单号时间与本次发起退款的时间间隔不超过30天。 基本请求信息： 请求方式 Http的Post方式 请求地址 /trade/v1/refund 描述信息 用于对已支付订单进行退款操作 请求参数说明： 参数名 是否必须 说明 syssn 是 钱方订单号，退款对应的原订单syssn out_trade_no 是 外部订单号，同子商户（mchid）下，每次成功调用支付与退款接口，该参数值均不能重复使用，也不能与支付时的外部订单号相同，保证单号唯一，长度不超过128字符。 txamt 是 订单支付金额，单位分, 即100=$1 txdtm 是 请求交易时间 格式为：YYYY-MM-DD HH:MM:SS mchid 是 子商户号，标识子商户身份，由钱方统一分配 txzone 否 时区，用于记录本地下单时间，默认为北京时间+0800 return_url 否 支付成功后的订单异步回调地址。 udid 否 设备唯一id 应答参数说明： 参数名 说明 syssn 退款交易唯一流水号 orig_syssn 原订交易流水号 txamt 订单支付金额，单位分, 即100=$1 txdtm 请求方交易时间 格式为：YYYY-mm-dd HH:MM:DD sysdtm 系统时间 应答示例： { orig_syssn : 20180112000100020001659358 , sysdtm : 2018-01-12 19:03:23 , cardcd : , txdtm : 2018-01-12 19:03:29 , resperr : \\u4ea4\\u6613\\u6210\\u529f , txcurrcd : CNY , txamt : 1 , respmsg : , out_trade_no : 13014597435743348787530052 , syssn : 20180112000100020001661542 , respcd : 0000 }", 
            "title": "订单退款"
        }, 
        {
            "location": "API-Instructions/#_4", 
            "text": "① 什么状态的订单可以关闭？ 扫码支付与公众号支付，若订单支付未成功，可关闭； 若订单已支付成功，原则上不建议调用关闭订单接口，因银行对于该订单支持标准不一致，很可能导致关闭失败。 刷卡支付，订单支付未成功，都可以关闭订单；若支付成功的同时，调用关闭订单接口，实际是微信的撤销API，此订单支付的款项就会原路返回。 ②关闭订单应用场景 关闭订单只是适用于当时，主要是为了避免重复支付。 为了避免造成各种未知问题，请不要把关闭订单接口当做退款接口使用。 基本请求信息： 请求方式 Http的Post方式 请求地址 /trade/v1/close 描述信息 关闭交易接口 请求参数说明： 参数名 是否必须 说明 mchid 是 子商户号，标识子商户身份，由钱方统一分配。 txamt 是 订单支付金额，单位分, 即100=$1 txdtm 是 请求交易时间 格式为：YYYY-MM-DD HH:MM:SS syssn 否 钱方订单号 其中参数syssn与out_trade_no至少传递一个 out_trade_no 否 外部订单号， 其中参数syssn与out_trade_no至少传递一个 txzone 否 时区，用于记录本地下单时间，默认为北京时间+0800 udid 否 设备唯一id 应答参数说明： 参数名 说明 syssn 钱方关闭交易生成的唯一订单号 orig_syssn 原交易钱方订单号，对应被关闭原订单syssn txamt 订单支付金额，单位分, 即100=$1 txdtm 请求交易时间 格式为：YYYY-mm-dd HH:MM:DD sysdtm 系统交易时间 应答示例： { orig_syssn : 20180112000100020001659801 , sysdtm : 2018-01-12 19:07:02 , cardcd : , txdtm : 2018-01-12 19:07:09 , resperr : \\u4ea4\\u6613\\u6210\\u529f , txcurrcd : CNY , txamt : 1 , respmsg : , syssn : 20180112000100020001661611 , respcd : 0000 } 注：关闭订单非通用支持，可能出现不支持关闭订单的情况，若关闭订单应答返回码为“1297”或返回内容无syssn字段（注：不是orig_syssn），说明该交易不支持关闭订单，如果用户已成功支付，可调用[退款接口](#订单退款)进行退款。", 
            "title": "订单关闭"
        }, 
        {
            "location": "API-Instructions/#_5", 
            "text": "说明 ：给订单添加交易备注；注意：不支持渠道模式的商户添加备注 基本请求信息 ： 请求方式 Http的Post方式 请求地址 /trade/v1/add_note 描述信息 为订单添加备注 请求参数说明： 参数名 是否必须 说明 code 是 钱方提供的商户code syssn 是 交易成功后钱方返回的订单号 note 是 需要添加的备注信息，不超过200个字符 返回参数示例： { resperr : , respcd : 0000 , respmsg : , data :{}}", 
            "title": "订单备注"
        }, 
        {
            "location": "API-Instructions/#_6", 
            "text": "说明： 渠道隔日下载清算对账单，以自然日为单位，包含每家商户的账单信息。 只能在正式环境上请求才可以，返回内容文件为zip格式压缩包文件。 基本请求信息： 请求方式 Http的Get方式 请求地址 /download/v1/trade_bill 描述信息 通过接口获取对账单文件，保存为zip文件 请求参数说明： 参数名 是否必须 说明 trade_date 是 获取对账单的具体日期 如2017-10-17", 
            "title": "下载对账单"
        }, 
        {
            "location": "APP-pay/", 
            "text": "APP支付 # 场景说明：该支付场景支持独立开发的iOS、Android应用程序自有业务逻辑中需要支付场景中使用，通过下单接口获取支付参数，拉起Alipay HK或Wechat Pay香港钱包进行付款，付款成功后确认支付结果并完成业务流程。 基本请求信息： 请求方式 Http的Post方式 请求地址 /trade/v1/payment 描述信息 发起消费交易接口 请求参数说明： 参数名 是否必须 说明 txamt 是 订单支付金额，单位分, 即100=$1 txcurrcd 是 币种 港币：HKD； 人民币：CNY； 美元：USD； pay_type 是 支付类型： 801010 WeixinHK APP支付；801510 AlipayHK APP支付； out_trade_no 是 外部订单号，开发者定义订单号。同子商户（mchid）下，每次成功调用支付（含退款）接口，该参数值均不能重复使用，保证单号唯一，长度不超过128字符 txdtm 是 请求交易时间，格式为：YYYY-MM-DD HH:MM:SS goods_name 是 商品名称标示，建议不超过20字，不含英文逗号等特殊字符 goods_info 否 AlipayHK APP支付此参数必传； 商品描述，建议不超过300字，不含英文逗号等特殊字符 mchid 否 有子商户时，此参数必传； 子商户号，标识子商户身份，由钱方分配（渠道系统后台查看对应商户(非业务员)子商户号，被视为对应商户的交易）。 pay_tag 否 走AlipayHK支付通道的，此参数必传； 支持本地跨境钱包支付标记。值为ALIPAYHK或ALIPYCN，ALIPAYHK表示支持支付宝香港钱包支付，ALIPYCN表示支付宝本地跨境钱包支付，默认值为ALIPAYHK。 return_url 否 支付成功后的订单异步回调地址()。 txzone 否 时区，用于记录本地下单时间，默认为北京时间+0800 udid 否 设备唯一id 应答参数说明： 参数名 说明 syssn 钱方订单号； out_trade_no 外部订单号，开发者平台订单号 txamt 订单支付金额，单位分, 即100=$1 txcurrcd 币种 港币：HKD ；人民币：CNY； pay_type 支付类型 801010 WeixinHK APP支付；801510 AlipayHK APP支付； txdtm 请求交易时间 格式为：YYYY-MM-DD HH:MM:SS sysdtm 系统时间 respcd 请求下单结果返回码,0000表示下单成功； 1143、1145表示交易中，需要继续查询交易结果； 其他返回码表示失败。 respmsg 调试信息。 resperr 成功或错误信息描述 pay_params 唤起APP支付的请求参数 应答示例（AlipayHK APP）： { syssn : 20180904016100020000058497 , out_trade_no : 1018172042-1226 , txamt : 1 , txcurrcd : HKD , pay_type : 801510 , txdtm : 2018-09-04 19:00:00 , sysdtm : 2018-09-04 20:30:18 , udid : qiantai2 , respcd : 0000 , respmsg : , resperr : \\u4ea4\\u6613\\u6210\\u529f , chnlsn : , pay_params : { partner : 2088621909478475 , seller_id : forex_318255@alitest.com , subject : goods_name , body : goods_info , total_fee : 0.01 , notify_url : http://www.xxx.com , service : mobile.securitypay.pay , cardcd : , payment_type : 1 , _input_charset : UTF-8 , it_b_pay : 30m , return_url : http://www.qfpay.com/ , payment_inst : ALIPAYHK , currency : HKD , product_code : NEW_WAP_OVERSEAS_SELLER , forex_biz : FP , sign : AXwqha79D%2BdnJvN4qyIk6wrintWXMFL3DNvIsJ9wmoBVkhWdE1jWb%2Fn7gWwcEPJkxrmgE%2BSLaPOo9mTemDzDgt99tJ4yPL%2B%2FFLiT78e5xCyZKOdPLcKnZ2fAKaiBTca43m5J6GE%2B8ybu56fRLw0hI8oWSxiJzY54MxwDGbE4QoQ%3D , sign_type : RSA , secondary_merchant_id : 2325496 , secondary_merchant_name : shusheng , secondary_merchant_industry : 5311 } } 应答示例（WeixinHK APP）： { syssn : 20181018016100020000064335 , out_trade_no : 1018171240-6683 , txamt : 1 , txcurrcd : HKD , pay_type : 801010 , txdtm : 2018-10-18 17:12:40 , sysdtm : 2018-10-18 17:12:41 , udid : qiantai2 , respcd : 0000 , respmsg : OK , resperr : \\u4ea4\\u6613\\u6210\\u529f\\uff01 , cardcd : , pay_params : { prepayid : 415398539638736726430369036811 , sign : 89D5D3346DCD0C5F848C4ADFA8F2E70D }, chnlsn : } 唤起APP支付 # 获取以上返回参数后，APP通过pay_params参数中内容调起Alipay HK SDK或Wechat Pay SDK进行支付，具体可参考官网文档： AlipayHK： https://global.alipay.com/service/app_hk/6 返回参数pay_params字段如下（AlipayHK APP）： { partner : 2088621909478475 , seller_id : forex_318255@alitest.com , out_trade_no : 20180904016100020000058497 , subject : goods_name , body : goods_info , total_fee : 0.01 , notify_url : http://www.xxx.com , service : mobile.securitypay.pay , payment_type : 1 , _input_charset : UTF-8 , it_b_pay : 30m , return_url : http://www.qfpay.com/ , payment_inst : ALIPAYHK , currency : HKD , product_code : NEW_WAP_OVERSEAS_SELLER , forex_biz : FP , sign : AXwqha79D%2BdnJvN4qyIk6wrintWXMFL3DNvIsJ9wmoBVkhWdE1jWb%2Fn7gWwcEPJkxrmgE%2BSLaPOo9mTemDzDgt99tJ4yPL%2B%2FFLiT78e5xCyZKOdPLcKnZ2fAKaiBTca43m5J6GE%2B8ybu56fRLw0hI8oWSxiJzY54MxwDGbE4QoQ%3D , sign_type : RSA , secondary_merchant_id : 2325496 , secondary_merchant_name : shusheng , secondary_merchant_industry : 5311 } 返回参数pay_params字段如下（WeixinHK APP）： { prepayid : 415398539638736726430369036811 , sign : 89D5D3346DCD0C5F848C4ADFA8F2E70D } python请求示例： #!/usr/bin/env python #coding=utf8 import urllib, urllib2, hashlib unicode_to_utf8 = lambda s: s.encode('utf-8') if isinstance(s, unicode) else s # 请求签名 data为数据字典 def make_req_sign(data, key): keys = data.keys() keys.sort() p = [] for k in keys: k = unicode_to_utf8(k) v = unicode_to_utf8(data[k]) p.append('%s=%s'%(k,v)) unsign_str = ' '.join(p) + unicode_to_utf8(key) s = hashlib.md5(unsign_str).hexdigest() return s.upper() txamt = '1' txcurrcd = ‘HKD’ pay_type = '801510' out_trade_no = '145399626053599943' txdtm = '2018-09-10 11:51:00' goods_name = '钱方测试goods_name' goods_info = '钱方测试goods_info' mchid = 'P5W2di7Raa' return_url = 'http://www.qfpay.com/' seller_id = 'forex_318255@alitest.com' key = '钱方分配的app_key' data ={'txamt': txamt, 'txcurrcd': txcurrcd, 'pay_type': pay_type, 'out_trade_no': out_trade_no, 'txdtm': txdtm, 'goods_name':goods_name, 'goods_info ': goods_info, 'mchid': mchid, 'return_url ': return_url, 'seller_id ': seller_id} req = urllib2.Request('https://openapi-test.qfpay.com/trade/v1/payment',urllib.urlencode(data)) req.add_header('X-QF-APPCODE', '钱方分配的app_code') req.add_header('X-QF-SIGN', make_req_sign(data, key)) resp = urllib2.urlopen(req) print resp.read() 支付成功后，接收异步通知 特殊说明: 异步通知有可能由于外部因素会造成延迟，所以对实时要求高的场景请使用订单查询接口！由于安全原因，异步通知仅支持80和443端口，不支持自定义端口。", 
            "title": "APP支付"
        }, 
        {
            "location": "APP-pay/#app", 
            "text": "场景说明：该支付场景支持独立开发的iOS、Android应用程序自有业务逻辑中需要支付场景中使用，通过下单接口获取支付参数，拉起Alipay HK或Wechat Pay香港钱包进行付款，付款成功后确认支付结果并完成业务流程。 基本请求信息： 请求方式 Http的Post方式 请求地址 /trade/v1/payment 描述信息 发起消费交易接口 请求参数说明： 参数名 是否必须 说明 txamt 是 订单支付金额，单位分, 即100=$1 txcurrcd 是 币种 港币：HKD； 人民币：CNY； 美元：USD； pay_type 是 支付类型： 801010 WeixinHK APP支付；801510 AlipayHK APP支付； out_trade_no 是 外部订单号，开发者定义订单号。同子商户（mchid）下，每次成功调用支付（含退款）接口，该参数值均不能重复使用，保证单号唯一，长度不超过128字符 txdtm 是 请求交易时间，格式为：YYYY-MM-DD HH:MM:SS goods_name 是 商品名称标示，建议不超过20字，不含英文逗号等特殊字符 goods_info 否 AlipayHK APP支付此参数必传； 商品描述，建议不超过300字，不含英文逗号等特殊字符 mchid 否 有子商户时，此参数必传； 子商户号，标识子商户身份，由钱方分配（渠道系统后台查看对应商户(非业务员)子商户号，被视为对应商户的交易）。 pay_tag 否 走AlipayHK支付通道的，此参数必传； 支持本地跨境钱包支付标记。值为ALIPAYHK或ALIPYCN，ALIPAYHK表示支持支付宝香港钱包支付，ALIPYCN表示支付宝本地跨境钱包支付，默认值为ALIPAYHK。 return_url 否 支付成功后的订单异步回调地址()。 txzone 否 时区，用于记录本地下单时间，默认为北京时间+0800 udid 否 设备唯一id 应答参数说明： 参数名 说明 syssn 钱方订单号； out_trade_no 外部订单号，开发者平台订单号 txamt 订单支付金额，单位分, 即100=$1 txcurrcd 币种 港币：HKD ；人民币：CNY； pay_type 支付类型 801010 WeixinHK APP支付；801510 AlipayHK APP支付； txdtm 请求交易时间 格式为：YYYY-MM-DD HH:MM:SS sysdtm 系统时间 respcd 请求下单结果返回码,0000表示下单成功； 1143、1145表示交易中，需要继续查询交易结果； 其他返回码表示失败。 respmsg 调试信息。 resperr 成功或错误信息描述 pay_params 唤起APP支付的请求参数 应答示例（AlipayHK APP）： { syssn : 20180904016100020000058497 , out_trade_no : 1018172042-1226 , txamt : 1 , txcurrcd : HKD , pay_type : 801510 , txdtm : 2018-09-04 19:00:00 , sysdtm : 2018-09-04 20:30:18 , udid : qiantai2 , respcd : 0000 , respmsg : , resperr : \\u4ea4\\u6613\\u6210\\u529f , chnlsn : , pay_params : { partner : 2088621909478475 , seller_id : forex_318255@alitest.com , subject : goods_name , body : goods_info , total_fee : 0.01 , notify_url : http://www.xxx.com , service : mobile.securitypay.pay , cardcd : , payment_type : 1 , _input_charset : UTF-8 , it_b_pay : 30m , return_url : http://www.qfpay.com/ , payment_inst : ALIPAYHK , currency : HKD , product_code : NEW_WAP_OVERSEAS_SELLER , forex_biz : FP , sign : AXwqha79D%2BdnJvN4qyIk6wrintWXMFL3DNvIsJ9wmoBVkhWdE1jWb%2Fn7gWwcEPJkxrmgE%2BSLaPOo9mTemDzDgt99tJ4yPL%2B%2FFLiT78e5xCyZKOdPLcKnZ2fAKaiBTca43m5J6GE%2B8ybu56fRLw0hI8oWSxiJzY54MxwDGbE4QoQ%3D , sign_type : RSA , secondary_merchant_id : 2325496 , secondary_merchant_name : shusheng , secondary_merchant_industry : 5311 } } 应答示例（WeixinHK APP）： { syssn : 20181018016100020000064335 , out_trade_no : 1018171240-6683 , txamt : 1 , txcurrcd : HKD , pay_type : 801010 , txdtm : 2018-10-18 17:12:40 , sysdtm : 2018-10-18 17:12:41 , udid : qiantai2 , respcd : 0000 , respmsg : OK , resperr : \\u4ea4\\u6613\\u6210\\u529f\\uff01 , cardcd : , pay_params : { prepayid : 415398539638736726430369036811 , sign : 89D5D3346DCD0C5F848C4ADFA8F2E70D }, chnlsn : }", 
            "title": "APP支付"
        }, 
        {
            "location": "APP-pay/#app_1", 
            "text": "获取以上返回参数后，APP通过pay_params参数中内容调起Alipay HK SDK或Wechat Pay SDK进行支付，具体可参考官网文档： AlipayHK： https://global.alipay.com/service/app_hk/6 返回参数pay_params字段如下（AlipayHK APP）： { partner : 2088621909478475 , seller_id : forex_318255@alitest.com , out_trade_no : 20180904016100020000058497 , subject : goods_name , body : goods_info , total_fee : 0.01 , notify_url : http://www.xxx.com , service : mobile.securitypay.pay , payment_type : 1 , _input_charset : UTF-8 , it_b_pay : 30m , return_url : http://www.qfpay.com/ , payment_inst : ALIPAYHK , currency : HKD , product_code : NEW_WAP_OVERSEAS_SELLER , forex_biz : FP , sign : AXwqha79D%2BdnJvN4qyIk6wrintWXMFL3DNvIsJ9wmoBVkhWdE1jWb%2Fn7gWwcEPJkxrmgE%2BSLaPOo9mTemDzDgt99tJ4yPL%2B%2FFLiT78e5xCyZKOdPLcKnZ2fAKaiBTca43m5J6GE%2B8ybu56fRLw0hI8oWSxiJzY54MxwDGbE4QoQ%3D , sign_type : RSA , secondary_merchant_id : 2325496 , secondary_merchant_name : shusheng , secondary_merchant_industry : 5311 } 返回参数pay_params字段如下（WeixinHK APP）： { prepayid : 415398539638736726430369036811 , sign : 89D5D3346DCD0C5F848C4ADFA8F2E70D } python请求示例： #!/usr/bin/env python #coding=utf8 import urllib, urllib2, hashlib unicode_to_utf8 = lambda s: s.encode('utf-8') if isinstance(s, unicode) else s # 请求签名 data为数据字典 def make_req_sign(data, key): keys = data.keys() keys.sort() p = [] for k in keys: k = unicode_to_utf8(k) v = unicode_to_utf8(data[k]) p.append('%s=%s'%(k,v)) unsign_str = ' '.join(p) + unicode_to_utf8(key) s = hashlib.md5(unsign_str).hexdigest() return s.upper() txamt = '1' txcurrcd = ‘HKD’ pay_type = '801510' out_trade_no = '145399626053599943' txdtm = '2018-09-10 11:51:00' goods_name = '钱方测试goods_name' goods_info = '钱方测试goods_info' mchid = 'P5W2di7Raa' return_url = 'http://www.qfpay.com/' seller_id = 'forex_318255@alitest.com' key = '钱方分配的app_key' data ={'txamt': txamt, 'txcurrcd': txcurrcd, 'pay_type': pay_type, 'out_trade_no': out_trade_no, 'txdtm': txdtm, 'goods_name':goods_name, 'goods_info ': goods_info, 'mchid': mchid, 'return_url ': return_url, 'seller_id ': seller_id} req = urllib2.Request('https://openapi-test.qfpay.com/trade/v1/payment',urllib.urlencode(data)) req.add_header('X-QF-APPCODE', '钱方分配的app_code') req.add_header('X-QF-SIGN', make_req_sign(data, key)) resp = urllib2.urlopen(req) print resp.read() 支付成功后，接收异步通知 特殊说明: 异步通知有可能由于外部因素会造成延迟，所以对实时要求高的场景请使用订单查询接口！由于安全原因，异步通知仅支持80和443端口，不支持自定义端口。", 
            "title": "唤起APP支付"
        }, 
        {
            "location": "alipay/", 
            "text": "支付宝服务窗 # 场景说明：该支付支持用户在支付宝服务窗、支付宝环境内的h5网页直接唤起支付宝输入密码支付。 获取openid # 参考支付宝官方文档，阿里生产环境下，通过oauth获取user_id，具体参考 https://docs.open.alipay.com/289/105656 请求支付接口 # 基本请求信息： 请求方式 Http的Post方式 请求地址 /trade/v1/payment 描述信息 发起消费交易接口 请求参数说明： 参数名 是否必须 说明 txamt 是 订单支付金额，单位分, 即100=$1 txcurrcd 是 币种 港币：HKD ；人民币：CNY；日元：JPY；美元：USD；迪拉姆：AED；泰铢：THB； pay_type 是 支付类型 支付宝服务窗支付:800107 out_trade_no 是 外部订单号，开发者平台订单号，同子商户（mchid）下，每次成功调用支付（含退款）接口，该参数值均不能重复使用，保证单号唯一，长度不超过128字符 txdtm 是 请求交易时间 格式为：格式为：YYYY-MM-DD HH:MM:SS openid 是 上一步获取的user_id 示例：2088802811715388 goods_name 是 商品名称或标示，建议不超过20字，不含英文逗号等特殊字符 mchid 是 子商户号，标识子商户身份，由钱方分配（渠道系统后台查看对应商户(非业务员)子商户号，被视为对应商户的交易）。 txzone 否 时区，用于记录本地下单时间，默认为北京时间+0800 return_url 否 支付成功后的订单异步回调地址。 limit_pay 否 该参数值指定为no_credit，则禁止使用信用卡支付 udid 否 设备唯一id 应答参数说明： 参数名 说明 pay_type 支付类型 微信公众号支付:800107 sysdtm 系统时间 txdtm 请求交易时间 格式为：YYYY-MM-DD HH:MM:SS resperr 信息描述 txcurrcd 币种 港币：HKD ；人民币：CNY txamt 订单支付金额，单位分, 即100=$1 respmsg 调试信息。 out_trade_no 外部订单号，开发者平台订单号。 syssn 钱方订单号。 respcd 请求下单结果返回码,0000表示下单成功； 1143、1145表示交易中，需要继续查询交易结果； 其他返回码表示失败。 pay_params 唤起支付宝支付参数。 返回示例：获取返回内容pay_params { pay_type : 800107 , sysdtm : 2018-01-11 18:44:59 , cardcd : , txdtm : 2018-01-11 18:45:03 , resperr : \\u4ea4\\u6613\\u6210\\u529f , txcurrcd : CNY , txamt : 1 , respmsg : , out_trade_no : 130145478743444389767778530052 , syssn : 20180111000100020001649385 , respcd : 0000 , pay_params : { tradeNO : 2018011121001004380248132360 } } 收银台唤起支付 # 参考 https://docs.open.alipay.com/common/105591 在网页中唤起支付宝 支付成功后，接收异步通知 特殊说明: 异步通知有可能由于外部因素会造成延迟，所以对实时要求高的场景请使用订单查询接口！由于安全原因，异步通知仅支持80和443端口，不支持自定义端口", 
            "title": "支付宝服务窗"
        }, 
        {
            "location": "alipay/#_1", 
            "text": "场景说明：该支付支持用户在支付宝服务窗、支付宝环境内的h5网页直接唤起支付宝输入密码支付。", 
            "title": "支付宝服务窗"
        }, 
        {
            "location": "alipay/#openid", 
            "text": "参考支付宝官方文档，阿里生产环境下，通过oauth获取user_id，具体参考 https://docs.open.alipay.com/289/105656", 
            "title": "获取openid"
        }, 
        {
            "location": "alipay/#_2", 
            "text": "基本请求信息： 请求方式 Http的Post方式 请求地址 /trade/v1/payment 描述信息 发起消费交易接口 请求参数说明： 参数名 是否必须 说明 txamt 是 订单支付金额，单位分, 即100=$1 txcurrcd 是 币种 港币：HKD ；人民币：CNY；日元：JPY；美元：USD；迪拉姆：AED；泰铢：THB； pay_type 是 支付类型 支付宝服务窗支付:800107 out_trade_no 是 外部订单号，开发者平台订单号，同子商户（mchid）下，每次成功调用支付（含退款）接口，该参数值均不能重复使用，保证单号唯一，长度不超过128字符 txdtm 是 请求交易时间 格式为：格式为：YYYY-MM-DD HH:MM:SS openid 是 上一步获取的user_id 示例：2088802811715388 goods_name 是 商品名称或标示，建议不超过20字，不含英文逗号等特殊字符 mchid 是 子商户号，标识子商户身份，由钱方分配（渠道系统后台查看对应商户(非业务员)子商户号，被视为对应商户的交易）。 txzone 否 时区，用于记录本地下单时间，默认为北京时间+0800 return_url 否 支付成功后的订单异步回调地址。 limit_pay 否 该参数值指定为no_credit，则禁止使用信用卡支付 udid 否 设备唯一id 应答参数说明： 参数名 说明 pay_type 支付类型 微信公众号支付:800107 sysdtm 系统时间 txdtm 请求交易时间 格式为：YYYY-MM-DD HH:MM:SS resperr 信息描述 txcurrcd 币种 港币：HKD ；人民币：CNY txamt 订单支付金额，单位分, 即100=$1 respmsg 调试信息。 out_trade_no 外部订单号，开发者平台订单号。 syssn 钱方订单号。 respcd 请求下单结果返回码,0000表示下单成功； 1143、1145表示交易中，需要继续查询交易结果； 其他返回码表示失败。 pay_params 唤起支付宝支付参数。 返回示例：获取返回内容pay_params { pay_type : 800107 , sysdtm : 2018-01-11 18:44:59 , cardcd : , txdtm : 2018-01-11 18:45:03 , resperr : \\u4ea4\\u6613\\u6210\\u529f , txcurrcd : CNY , txamt : 1 , respmsg : , out_trade_no : 130145478743444389767778530052 , syssn : 20180111000100020001649385 , respcd : 0000 , pay_params : { tradeNO : 2018011121001004380248132360 } }", 
            "title": "请求支付接口"
        }, 
        {
            "location": "alipay/#_3", 
            "text": "参考 https://docs.open.alipay.com/common/105591 在网页中唤起支付宝 支付成功后，接收异步通知 特殊说明: 异步通知有可能由于外部因素会造成延迟，所以对实时要求高的场景请使用订单查询接口！由于安全原因，异步通知仅支持80和443端口，不支持自定义端口", 
            "title": "收银台唤起支付"
        }, 
        {
            "location": "card-pay/", 
            "text": "刷卡支付（反扫） # 场景说明：该支付场景支持使用扫码枪、扫码盒子等设备扫描用户展示的微信、支付宝付款二维码，以获取auth_code付款授权码，直接进行扣款的用户支付方式。 请求支付接口 # 基本请求信息： 请求方式 Http的Post方式 请求地址 /trade/v1/payment 描述信息 发起消费交易接口 请求参数说明： 参数名 是否必须 说明 txamt 是 订单支付金额，单位分, 即100=$1 txcurrcd 是 币种 港币：HKD ；人民币：CNY；日元：JPY；美元：USD；迪拉姆：AED；泰铢：THB； pay_type 是 支付类型 微信刷卡反扫:800208；支付宝刷卡反扫:800108; 微信、支付宝反扫800008； LINEPAY：801208；AIRPAY：801408； 银联云闪付：800708； out_trade_no 是 外部订单号，开发者平台订单号 txdtm 是 请求交易时间 格式为：格式为：YYYY-MM-DD HH:MM:SS auth_code 是 微信或者支付宝的授权码 goods_name 是 商品名称或标示 mchid 是 子商户号，标识子商户身份，由钱方分配（渠道系统后台查看对应商户(非业务员)子商户号，被视为对应商户的交易）。 txzone 否 时区，用于记录本地下单时间，默认为北京时间+0800 return_url 否 支付成功后的订单异步回调地址。 udid 否 设备唯一id python请求示例： #!/usr/bin/env python #coding=utf8 import urllib, urllib2, hashlib unicode_to_utf8 = lambda s: s.encode('utf-8') if isinstance(s, unicode) else s # 请求签名 data为数据字典 def make_req_sign(data, key): keys = data.keys() keys.sort() p = [] for k in keys: k = unicode_to_utf8(k) v = unicode_to_utf8(data[k]) p.append('%s=%s'%(k,v)) unsign_str = ' '.join(p) + unicode_to_utf8(key) s = hashlib.md5(unsign_str).hexdigest() return s.upper() txamt = '1' txcurrcd = 'CNY' pay_type = '800208' out_trade_no = '145399626053599943' txdtm = '2016-04-11 17:51:00' goods_name = '钱方测试' udid = '1880105' auth_code='130700033456383187' key = '钱方分配的app_key' data ={'txamt': txamt, 'txcurrcd': txcurrcd, 'pay_type': pay_type, 'out_trade_no': out_trade_no, 'txdtm': txdtm, 'goods_name':goods_name,'udid':udid,'auth_code':auth_code} req = urllib2.Request('https://openapi-test.qfpay.com/trade/v1/payment',urllib.urlencode(data)) req.add_header('X-QF-APPCODE', '钱方分配的app_code') req.add_header('X-QF-SIGN', make_req_sign(data, key)) resp = urllib2.urlopen(req) print resp.read() 应答参数说明： 参数名 说明 pay_type 支付类型 微信刷卡:800208；支付宝刷卡：800108； sysdtm 系统时间 txdtm 请求交易时间 格式为：YYYY-MM-DD HH:MM:SS resperr 信息描述 txcurrcd 币种 港币：HKD ；人民币：CNY； txamt 订单支付金额，单位分, 即100=$1 respmsg 调试信息 out_trade_no 外部订单号，开发者平台订单号 syssn 钱方订单号 respcd 交易返回码0000表示交易支付成功； 1143、1145表示交易中，需继续查询交易结果； 其他返回码表示交易失败 注：刷卡支付请求payment接口是直接发起用户扣款，返回respcd参数字段代表用户交易付款结果，若该字段状态为1143、1145，建议商户继续调用查询接口，继续跟踪交易付款结果，若长时间为1143、1145状态，可重新发起订单交易。 应答示例： { pay_type : 800208 , sysdtm : 2018-01-12 17:10:26 , cardcd : oo3Lss-DzPSygtHtAbfuXeQFCz18 , txdtm : 2018-01-12 17:10:32 , resperr : \\u4ea4\\u6613\\u6210\\u529f , txcurrcd : CNY , txamt : 1 , respmsg : , out_trade_no : 1301459478787530052 , syssn : 20180112000100020001659358 , respcd : 0000 } 注：该请求返回结果直接为用户支付结果。 支付成功后，接收异步通知 特殊说明: 异步通知有可能由于外部因素会造成延迟，所以对实时要求高的场景请使用订单查询接口！由于安全原因，异步通知仅支持80和443端口，不支持自定义端口。", 
            "title": "刷卡支付(反扫)"
        }, 
        {
            "location": "card-pay/#_1", 
            "text": "场景说明：该支付场景支持使用扫码枪、扫码盒子等设备扫描用户展示的微信、支付宝付款二维码，以获取auth_code付款授权码，直接进行扣款的用户支付方式。", 
            "title": "刷卡支付（反扫）"
        }, 
        {
            "location": "card-pay/#_2", 
            "text": "基本请求信息： 请求方式 Http的Post方式 请求地址 /trade/v1/payment 描述信息 发起消费交易接口 请求参数说明： 参数名 是否必须 说明 txamt 是 订单支付金额，单位分, 即100=$1 txcurrcd 是 币种 港币：HKD ；人民币：CNY；日元：JPY；美元：USD；迪拉姆：AED；泰铢：THB； pay_type 是 支付类型 微信刷卡反扫:800208；支付宝刷卡反扫:800108; 微信、支付宝反扫800008； LINEPAY：801208；AIRPAY：801408； 银联云闪付：800708； out_trade_no 是 外部订单号，开发者平台订单号 txdtm 是 请求交易时间 格式为：格式为：YYYY-MM-DD HH:MM:SS auth_code 是 微信或者支付宝的授权码 goods_name 是 商品名称或标示 mchid 是 子商户号，标识子商户身份，由钱方分配（渠道系统后台查看对应商户(非业务员)子商户号，被视为对应商户的交易）。 txzone 否 时区，用于记录本地下单时间，默认为北京时间+0800 return_url 否 支付成功后的订单异步回调地址。 udid 否 设备唯一id python请求示例： #!/usr/bin/env python #coding=utf8 import urllib, urllib2, hashlib unicode_to_utf8 = lambda s: s.encode('utf-8') if isinstance(s, unicode) else s # 请求签名 data为数据字典 def make_req_sign(data, key): keys = data.keys() keys.sort() p = [] for k in keys: k = unicode_to_utf8(k) v = unicode_to_utf8(data[k]) p.append('%s=%s'%(k,v)) unsign_str = ' '.join(p) + unicode_to_utf8(key) s = hashlib.md5(unsign_str).hexdigest() return s.upper() txamt = '1' txcurrcd = 'CNY' pay_type = '800208' out_trade_no = '145399626053599943' txdtm = '2016-04-11 17:51:00' goods_name = '钱方测试' udid = '1880105' auth_code='130700033456383187' key = '钱方分配的app_key' data ={'txamt': txamt, 'txcurrcd': txcurrcd, 'pay_type': pay_type, 'out_trade_no': out_trade_no, 'txdtm': txdtm, 'goods_name':goods_name,'udid':udid,'auth_code':auth_code} req = urllib2.Request('https://openapi-test.qfpay.com/trade/v1/payment',urllib.urlencode(data)) req.add_header('X-QF-APPCODE', '钱方分配的app_code') req.add_header('X-QF-SIGN', make_req_sign(data, key)) resp = urllib2.urlopen(req) print resp.read() 应答参数说明： 参数名 说明 pay_type 支付类型 微信刷卡:800208；支付宝刷卡：800108； sysdtm 系统时间 txdtm 请求交易时间 格式为：YYYY-MM-DD HH:MM:SS resperr 信息描述 txcurrcd 币种 港币：HKD ；人民币：CNY； txamt 订单支付金额，单位分, 即100=$1 respmsg 调试信息 out_trade_no 外部订单号，开发者平台订单号 syssn 钱方订单号 respcd 交易返回码0000表示交易支付成功； 1143、1145表示交易中，需继续查询交易结果； 其他返回码表示交易失败 注：刷卡支付请求payment接口是直接发起用户扣款，返回respcd参数字段代表用户交易付款结果，若该字段状态为1143、1145，建议商户继续调用查询接口，继续跟踪交易付款结果，若长时间为1143、1145状态，可重新发起订单交易。 应答示例： { pay_type : 800208 , sysdtm : 2018-01-12 17:10:26 , cardcd : oo3Lss-DzPSygtHtAbfuXeQFCz18 , txdtm : 2018-01-12 17:10:32 , resperr : \\u4ea4\\u6613\\u6210\\u529f , txcurrcd : CNY , txamt : 1 , respmsg : , out_trade_no : 1301459478787530052 , syssn : 20180112000100020001659358 , respcd : 0000 } 注：该请求返回结果直接为用户支付结果。 支付成功后，接收异步通知 特殊说明: 异步通知有可能由于外部因素会造成延迟，所以对实时要求高的场景请使用订单查询接口！由于安全原因，异步通知仅支持80和443端口，不支持自定义端口。", 
            "title": "请求支付接口"
        }, 
        {
            "location": "developer/", 
            "text": "开发指南 # 环境说明 # 钱台交易云对外服务有两个环境: 测试环境： 用于测试、对接联调测试code、key。 正式环境： 商用服务，更高稳定性。 测试code、key资金不进行清结算，请使用小额测试。 mchid子商户号，渠道管理后台查看，该后台等申请正式code、key后提供。 code、key 以渠道为基础配置，渠道下子商户可统一使用一套code、key。 接口请求域名： 测试环境：https://openapi-test.qfpay.com 正式环境：https://openapi.qfpay.com 支持接口列表 ： API接口说明： 接口地址： 接口描述 请求方式、说明 订单支付 /trade/v1/payment 发起消费交易接口，用于下单或支付发起 Http的Post或者Get方式（form表单提交） 订单查询 /trade/v1/query 查询订单信息，用于已成功下单的订单 Http的Post或者Get方式 订单退款 /trade/v1/refund 用于已支付订单退款 Http的Post方式 订单关闭 /tarde/v1/close 关闭交易 Http的Post方式 编码说明 无特殊说明，所有接口参数返回使用UTF-8编码。 签名校验算法 # 无特殊说明，所有请求接口签名均使用该签名方式。 请求接口参数签名方式： 步骤1： 将所有参数按照参数名升序。 参数列表为：abc=value1 bcd=value2 bad=value3 排序结果为：abc=value1 bad=value3 bcd=value2 步骤2： 将所有参数用 连接，得到待签名字符串。 abc=value1 bad=value3 bcd=value2 步骤3： 将待签名的字符串与开发者的Key拼接。 abc=value1 bad=value3 bcd=value2 Key 步骤4： 将拼接起来的字符串做MD5运算。 MD5(abc=value1 bad=value3 bcd=value2 Key ) 步骤5： 请求接口使用签名。 将签名结果存到http头部的X-QF-SIGN字段里 求签名python示例： import hashlib unicode_to_utf8 = lambda s: s.encode('utf-8') if isinstance(s, unicode) else s # 请求签名 data为数据字典 def make_req_sign(data, key): keys = data.keys() keys.sort() p = [] for k in keys: k = unicode_to_utf8(k) v = unicode_to_utf8(data[k]) p.append('%s=%s'%(k,v)) unsign_str = ' '.join(p) + unicode_to_utf8(key) s = hashlib.md5(unsign_str).hexdigest() return s.upper() 请求说明 # 请求API接口，http头部需要设置的参数如下： 字段名称 是否必传 描述 X-QF-APPCODE 是 分配给开发者的app_code，开发者的唯一标示，该参数需要钱方分配给开发者！ X-QF-SIGN 是 按照签名算法生成的签名 应答验签 # 说明：请求接口成功后，接口返回JSON格式内容，获取接口返回信息，进行返回信息验签。 返回http头部会设置的参数如下： 字段名称 描述 X-QF-SIGN 获取http头部签名SIGN内容字符串，然后用原始返回内容连接key，进行MD5，即MD5(body+key)获得签名，与该SIGN内容对比是否一致； 头部SIGN示例： { 'Server': 'nginx', 'Date': 'Fri, 12 Jan 2018 11:31:18 GMT', 'Content-Type': 'application/json; charset=UTF-8', 'Content-Length': '302', 'Connection': 'keep-alive', 'X-QF-SIGN': '1E2CE7C2A7F8F581C354A857182B7A31', 'X-Powered-By': 'QF/1.1' } 公共返回参数如下： 参数名称 说明 respcd Data外数据参数返回0000为下单成功； 注：data内数据参数respcd返回0000为收款成功，其他结果（1143，1145除外）均为失败，其中返回1143,1145表示交易中，需要继续查询交易结果。若订单长时间为1143、1145状态，建议 订单关闭 后重新发起。 Resperr 信息描述 pay_type 支付类型 respmsg 调试信息 返回内容验签对比SIGN： MD5内容为： { pay_type : 800108 , sysdtm : 2018-01-12 19:31:16 , cardcd : 2088802362210279 , txdtm : 2018-01-12 19:31:22 , resperr : \\u4ea4\\u6613\\u6210\\u529f , txcurrcd : CNY , txamt : 1 , respmsg : , out_trade_no : 130145934788787530052 , syssn : 20180112000100020001662134 , respcd : 0000 } 615ED178BA524459976CE40FAB78000F MD5结果：1E2CE7C2A7F8F581C354A857182B7A31 异步通知 # 注意： 异步通知地址，由渠道提供给钱方技术支持人员进行配置，每套code、key只能配置一条异步通知地址，可修改。 支付成功的订单，会返回异步通知结果，异步通知有可能由于外部因素造成延迟，所以对实时要求高的场景请调用查询接口查询，建议异步通知与查询接口配合使用。由于安全原因，异步通知仅支持80和443端口，不支持自定义指定端口。 异步通知发送规则： ①异步通知的地址提供给钱方技术支持，在后台系统设定好。 ②交易成功后，钱方会以json格式POST到设定好的异步通知地址上。 ③开发者，收到异步通知后，验证签名通过后，需要给钱方返回SUCCESS字符串，表示已处理。 ④若开发者给钱方返回其他的数据，或者没有任何返回，那么钱方会以一定的策略再次发送异步通知，时间间隔是2m、10m、10m、60m、2h、6h、15h，期间任何一次收到SUCCESS，都将不继续后续的通知。 异步通知签名算法验证： 步骤1： 从http头部X-QF-SIGN字段取到签名。 步骤2： http应答所有原始正文内容body部分和Key拼接起来，得到待验证的字符串。 步骤3： 将待验证的字符串，做MD5运算。 步骤4： 运算结果与X-QF-SIGN签名对比，验证是否一致，一致则验证成功，返回 SUCCESS 验证签名python示例： import hashlib unicode_to_utf8 = lambda s: s.encode('utf-8') if isinstance(s, unicode) else s # 应答签名 data为返回的整个内容数据字符串 def make_resp_sign(data, key): ​ unsign_str = unicode_to_utf8(data) + unicode_to_utf8(key) ​ s = hashlib.md5(unsign_str).hexdigest() ​ return s.upper() 异步通知返回参数说明： 参数名称 说明 notify_type 通知类型 payment：支付； refund：退款； close：关闭； syssn 交易流水号； out_trade_no 外部订单号，开发者定义订单号； pay_type 支付类型 支付宝扫码:800101； 支付宝反扫:800108；支付宝服务窗：800107；微信扫码:800201； 微信刷卡:800208； 微信公众号支付:800207； txdtm 请求交易时间； txamt 订单支付金额，单位分, 即100=$1 respcd 交易返回码，默认返回所有订单状态的返回码； sysdtm 系统交易时间 paydtm 用户支付时间 cancel 撤销/退款标记 正常交易：0；已撤销：2；已退货：3； cardcd 微信、支付宝的用户openid 参数； goods_name 商品名称或标示； status 交易状态码：1：支付成功； txcurrcd 币种：港币：HKD ；人民币：CNY； mchid 子商户号； 异步通知返回示例： { status : 1 , sysdtm : 2017-12-28 13:41:47 , paydtm : 2017-12-28 13:42:20 , goods_name : , txcurrcd : CNY , mchid : XXxxxx , cancel : 0 , pay_type : 800207 , cardcd : oo3Lss1m9-eHSEyY2OGKzxFaRflY , txdtm : 2017-12-28 13:41:47 , txamt : 200 , out_trade_no : BO201712280117290001 , syssn : 20171228000300020044178249 , respcd : 0000 , goods_info : , notify_type : payment }", 
            "title": "开发指南"
        }, 
        {
            "location": "developer/#_1", 
            "text": "", 
            "title": "开发指南"
        }, 
        {
            "location": "developer/#_2", 
            "text": "钱台交易云对外服务有两个环境: 测试环境： 用于测试、对接联调测试code、key。 正式环境： 商用服务，更高稳定性。 测试code、key资金不进行清结算，请使用小额测试。 mchid子商户号，渠道管理后台查看，该后台等申请正式code、key后提供。 code、key 以渠道为基础配置，渠道下子商户可统一使用一套code、key。 接口请求域名： 测试环境：https://openapi-test.qfpay.com 正式环境：https://openapi.qfpay.com 支持接口列表 ： API接口说明： 接口地址： 接口描述 请求方式、说明 订单支付 /trade/v1/payment 发起消费交易接口，用于下单或支付发起 Http的Post或者Get方式（form表单提交） 订单查询 /trade/v1/query 查询订单信息，用于已成功下单的订单 Http的Post或者Get方式 订单退款 /trade/v1/refund 用于已支付订单退款 Http的Post方式 订单关闭 /tarde/v1/close 关闭交易 Http的Post方式 编码说明 无特殊说明，所有接口参数返回使用UTF-8编码。", 
            "title": "环境说明"
        }, 
        {
            "location": "developer/#_3", 
            "text": "无特殊说明，所有请求接口签名均使用该签名方式。 请求接口参数签名方式： 步骤1： 将所有参数按照参数名升序。 参数列表为：abc=value1 bcd=value2 bad=value3 排序结果为：abc=value1 bad=value3 bcd=value2 步骤2： 将所有参数用 连接，得到待签名字符串。 abc=value1 bad=value3 bcd=value2 步骤3： 将待签名的字符串与开发者的Key拼接。 abc=value1 bad=value3 bcd=value2 Key 步骤4： 将拼接起来的字符串做MD5运算。 MD5(abc=value1 bad=value3 bcd=value2 Key ) 步骤5： 请求接口使用签名。 将签名结果存到http头部的X-QF-SIGN字段里 求签名python示例： import hashlib unicode_to_utf8 = lambda s: s.encode('utf-8') if isinstance(s, unicode) else s # 请求签名 data为数据字典 def make_req_sign(data, key): keys = data.keys() keys.sort() p = [] for k in keys: k = unicode_to_utf8(k) v = unicode_to_utf8(data[k]) p.append('%s=%s'%(k,v)) unsign_str = ' '.join(p) + unicode_to_utf8(key) s = hashlib.md5(unsign_str).hexdigest() return s.upper()", 
            "title": "签名校验算法"
        }, 
        {
            "location": "developer/#_4", 
            "text": "请求API接口，http头部需要设置的参数如下： 字段名称 是否必传 描述 X-QF-APPCODE 是 分配给开发者的app_code，开发者的唯一标示，该参数需要钱方分配给开发者！ X-QF-SIGN 是 按照签名算法生成的签名", 
            "title": "请求说明"
        }, 
        {
            "location": "developer/#_5", 
            "text": "说明：请求接口成功后，接口返回JSON格式内容，获取接口返回信息，进行返回信息验签。 返回http头部会设置的参数如下： 字段名称 描述 X-QF-SIGN 获取http头部签名SIGN内容字符串，然后用原始返回内容连接key，进行MD5，即MD5(body+key)获得签名，与该SIGN内容对比是否一致； 头部SIGN示例： { 'Server': 'nginx', 'Date': 'Fri, 12 Jan 2018 11:31:18 GMT', 'Content-Type': 'application/json; charset=UTF-8', 'Content-Length': '302', 'Connection': 'keep-alive', 'X-QF-SIGN': '1E2CE7C2A7F8F581C354A857182B7A31', 'X-Powered-By': 'QF/1.1' } 公共返回参数如下： 参数名称 说明 respcd Data外数据参数返回0000为下单成功； 注：data内数据参数respcd返回0000为收款成功，其他结果（1143，1145除外）均为失败，其中返回1143,1145表示交易中，需要继续查询交易结果。若订单长时间为1143、1145状态，建议 订单关闭 后重新发起。 Resperr 信息描述 pay_type 支付类型 respmsg 调试信息 返回内容验签对比SIGN： MD5内容为： { pay_type : 800108 , sysdtm : 2018-01-12 19:31:16 , cardcd : 2088802362210279 , txdtm : 2018-01-12 19:31:22 , resperr : \\u4ea4\\u6613\\u6210\\u529f , txcurrcd : CNY , txamt : 1 , respmsg : , out_trade_no : 130145934788787530052 , syssn : 20180112000100020001662134 , respcd : 0000 } 615ED178BA524459976CE40FAB78000F MD5结果：1E2CE7C2A7F8F581C354A857182B7A31", 
            "title": "应答验签"
        }, 
        {
            "location": "developer/#_6", 
            "text": "注意： 异步通知地址，由渠道提供给钱方技术支持人员进行配置，每套code、key只能配置一条异步通知地址，可修改。 支付成功的订单，会返回异步通知结果，异步通知有可能由于外部因素造成延迟，所以对实时要求高的场景请调用查询接口查询，建议异步通知与查询接口配合使用。由于安全原因，异步通知仅支持80和443端口，不支持自定义指定端口。 异步通知发送规则： ①异步通知的地址提供给钱方技术支持，在后台系统设定好。 ②交易成功后，钱方会以json格式POST到设定好的异步通知地址上。 ③开发者，收到异步通知后，验证签名通过后，需要给钱方返回SUCCESS字符串，表示已处理。 ④若开发者给钱方返回其他的数据，或者没有任何返回，那么钱方会以一定的策略再次发送异步通知，时间间隔是2m、10m、10m、60m、2h、6h、15h，期间任何一次收到SUCCESS，都将不继续后续的通知。 异步通知签名算法验证： 步骤1： 从http头部X-QF-SIGN字段取到签名。 步骤2： http应答所有原始正文内容body部分和Key拼接起来，得到待验证的字符串。 步骤3： 将待验证的字符串，做MD5运算。 步骤4： 运算结果与X-QF-SIGN签名对比，验证是否一致，一致则验证成功，返回 SUCCESS 验证签名python示例： import hashlib unicode_to_utf8 = lambda s: s.encode('utf-8') if isinstance(s, unicode) else s # 应答签名 data为返回的整个内容数据字符串 def make_resp_sign(data, key): ​ unsign_str = unicode_to_utf8(data) + unicode_to_utf8(key) ​ s = hashlib.md5(unsign_str).hexdigest() ​ return s.upper() 异步通知返回参数说明： 参数名称 说明 notify_type 通知类型 payment：支付； refund：退款； close：关闭； syssn 交易流水号； out_trade_no 外部订单号，开发者定义订单号； pay_type 支付类型 支付宝扫码:800101； 支付宝反扫:800108；支付宝服务窗：800107；微信扫码:800201； 微信刷卡:800208； 微信公众号支付:800207； txdtm 请求交易时间； txamt 订单支付金额，单位分, 即100=$1 respcd 交易返回码，默认返回所有订单状态的返回码； sysdtm 系统交易时间 paydtm 用户支付时间 cancel 撤销/退款标记 正常交易：0；已撤销：2；已退货：3； cardcd 微信、支付宝的用户openid 参数； goods_name 商品名称或标示； status 交易状态码：1：支付成功； txcurrcd 币种：港币：HKD ；人民币：CNY； mchid 子商户号； 异步通知返回示例： { status : 1 , sysdtm : 2017-12-28 13:41:47 , paydtm : 2017-12-28 13:42:20 , goods_name : , txcurrcd : CNY , mchid : XXxxxx , cancel : 0 , pay_type : 800207 , cardcd : oo3Lss1m9-eHSEyY2OGKzxFaRflY , txdtm : 2017-12-28 13:41:47 , txamt : 200 , out_trade_no : BO201712280117290001 , syssn : 20171228000300020044178249 , respcd : 0000 , goods_info : , notify_type : payment }", 
            "title": "异步通知"
        }, 
        {
            "location": "scancode/", 
            "text": "扫码支付（含支付宝wap） # 场景说明：该支付场景支持明确用户的支付金额与支付方式（微信或支付宝）后，系统生成对应二维码，用户扫描该固定金额的二维码进行支付，二维码仅可使用支付一次，时效一般不超30 分钟，过期作废。 请求支付接口 # 基本请求信息： 请求方式 Http的Post方式 请求地址 /trade/v1/payment 描述信息 发起消费交易接口 请求参数说明： 参数名 是否必须 说明 txamt 是 订单支付金额，单位分, 即100=$1 txcurrcd 是 币种 港币：HKD ；人民币：CNY；日元：JPY；美元：USD；迪拉姆：AED；泰铢：THB； pay_type 是 支付类型 微信扫码:800201；支付宝扫码:800101； 支付宝香港Wap支付: 801512; 支付宝香港扫码:801501; 支付宝海外Wap支付：801107;支付宝海外扫码:801101; LINEPAY：801307；LINEPAY 线上预支付：801301 银联云闪付：800701；NETSPAY扫码: 801701 out_trade_no 是 外部订单号，开发者平台订单号，同子商户（mchid）下，每次成功调用支付（含退款）接口，该参数值均不能重复使用，保证单号唯一，长度不超过128字符 txdtm 是 请求交易时间 格式为：格式为：YYYY-MM-DD HH:MM:SS goods_name 是 商品名称或标示，建议不超过20字，不含英文逗号等特殊字符 mchid 是 子商户号，标识子商户身份，由钱方分配（渠道系统后台查看对应商户(非业务员)子商户号，被视为对应商户的交易）。 pay_tag 否 本参数为支持本地跨境钱包支付标记，走AlipayHK支付通道的，此参数为必填项。值为ALIPAYHK或ALIPYCN，ALIPAYHK表示支持支付宝香港钱包支付，ALIPYCN表示支付宝本地跨境钱包支付，默认值为ALIPAYHK。 txzone 否 时区，用于记录本地下单时间，默认为北京时间+0800 return_url 否 支付成功后的订单异步回调地址。 limit_pay 否 该参数值指定为no_credit，则禁止使用信用卡支付 udid 否 设备唯一id长度不超过40字符 python请求示例： #!/usr/bin/env python #coding=utf8 import urllib, urllib2, hashlib unicode_to_utf8 = lambda s: s.encode('utf-8') if isinstance(s, unicode) else s # 请求签名 data为数据 字典 def make_req_sign(data, key): keys = data.keys() keys.sort() p = [] for k in keys: k = unicode_to_utf8(k) v = unicode_to_utf8(data[k]) p.append('%s=%s'%(k,v)) unsign_str = ' '.join(p) + unicode_to_utf8(key) s = hashlib.md5(unsign_str).hexdigest() return s.upper() txamt = '1' txcurrcd = 'CNY' pay_type = '800201' out_trade_no = '145399626053599943' txdtm = '2016-04-11 17:51:00' goods_name = '钱方测试' limit_pay = 'no_credit' udid = '1880105' key = '钱方分配的app_key' data ={'txamt': txamt, 'txcurrcd': txcurrcd, 'pay_type': pay_type, 'out_trade_no': out_trade_no, 'txdtm': txdtm, 'goods_name':goods_name,'limit_pay':limit_pay,'udid':udid} req = urllib2.Request('https://openapi-test.qfpay.com/trade/v1/payment',urllib.urlencode(data)) req.add_header('X-QF-APPCODE', '钱方分配的app_code') req.add_header('X-QF-SIGN', make_req_sign(data, key)) resp = urllib2.urlopen(req) print resp.read() 应答参数说明： 参数名 说明 pay_type 支付类型 微信扫码:800201；支付宝扫码:800101 sysdtm 系统时间 txdtm 请求交易时间 格式为：YYYY-MM-MM HH:MM:SS resperr 信息描述 txamt 订单支付金额，单位分, 即100=$1 respmsg 调试信息 out_trade_no 外部订单号，开发者平台订单号； syssn 钱方订单号； qrcode 下单成功后返回，需商户自行进行二维码转换； respcd 返回码0000表示下单成功； 1143、1145表示交易中，需要继续查询交易结果， 其他返回码表示失败； 注：该请求结果为下单结果，根据返回参数arcode 商户自行转换二维码，用户扫码付款； 应答示例： { pay_type : 800201 , sysdtm : 2018-01-12 17:38:50 , cardcd : , txdtm : 2018-01-12 17:38:56 , resperr : \\u4ea4\\u6613\\u6210\\u529f , txcurrcd : CNY , txamt : 1 , respmsg : , out_trade_no : 13014597457448787530052 , syssn : 20180112000100020001659801 , qrcode : weixin://wxpay/bizpayurl?pr=hBvNxhc , respcd : 0000 } 支付成功后，接收异步通知 特殊说明: 异步通知有可能由于外部因素会造成延迟，所以对实时要求高的场景请使用订单查询接口！由于安全原因，异步通知仅支持80和443端口，不支持自定义端口。", 
            "title": "扫码支付(含支付宝wap)"
        }, 
        {
            "location": "scancode/#wap", 
            "text": "场景说明：该支付场景支持明确用户的支付金额与支付方式（微信或支付宝）后，系统生成对应二维码，用户扫描该固定金额的二维码进行支付，二维码仅可使用支付一次，时效一般不超30 分钟，过期作废。", 
            "title": "扫码支付（含支付宝wap）"
        }, 
        {
            "location": "scancode/#_1", 
            "text": "基本请求信息： 请求方式 Http的Post方式 请求地址 /trade/v1/payment 描述信息 发起消费交易接口 请求参数说明： 参数名 是否必须 说明 txamt 是 订单支付金额，单位分, 即100=$1 txcurrcd 是 币种 港币：HKD ；人民币：CNY；日元：JPY；美元：USD；迪拉姆：AED；泰铢：THB； pay_type 是 支付类型 微信扫码:800201；支付宝扫码:800101； 支付宝香港Wap支付: 801512; 支付宝香港扫码:801501; 支付宝海外Wap支付：801107;支付宝海外扫码:801101; LINEPAY：801307；LINEPAY 线上预支付：801301 银联云闪付：800701；NETSPAY扫码: 801701 out_trade_no 是 外部订单号，开发者平台订单号，同子商户（mchid）下，每次成功调用支付（含退款）接口，该参数值均不能重复使用，保证单号唯一，长度不超过128字符 txdtm 是 请求交易时间 格式为：格式为：YYYY-MM-DD HH:MM:SS goods_name 是 商品名称或标示，建议不超过20字，不含英文逗号等特殊字符 mchid 是 子商户号，标识子商户身份，由钱方分配（渠道系统后台查看对应商户(非业务员)子商户号，被视为对应商户的交易）。 pay_tag 否 本参数为支持本地跨境钱包支付标记，走AlipayHK支付通道的，此参数为必填项。值为ALIPAYHK或ALIPYCN，ALIPAYHK表示支持支付宝香港钱包支付，ALIPYCN表示支付宝本地跨境钱包支付，默认值为ALIPAYHK。 txzone 否 时区，用于记录本地下单时间，默认为北京时间+0800 return_url 否 支付成功后的订单异步回调地址。 limit_pay 否 该参数值指定为no_credit，则禁止使用信用卡支付 udid 否 设备唯一id长度不超过40字符 python请求示例： #!/usr/bin/env python #coding=utf8 import urllib, urllib2, hashlib unicode_to_utf8 = lambda s: s.encode('utf-8') if isinstance(s, unicode) else s # 请求签名 data为数据 字典 def make_req_sign(data, key): keys = data.keys() keys.sort() p = [] for k in keys: k = unicode_to_utf8(k) v = unicode_to_utf8(data[k]) p.append('%s=%s'%(k,v)) unsign_str = ' '.join(p) + unicode_to_utf8(key) s = hashlib.md5(unsign_str).hexdigest() return s.upper() txamt = '1' txcurrcd = 'CNY' pay_type = '800201' out_trade_no = '145399626053599943' txdtm = '2016-04-11 17:51:00' goods_name = '钱方测试' limit_pay = 'no_credit' udid = '1880105' key = '钱方分配的app_key' data ={'txamt': txamt, 'txcurrcd': txcurrcd, 'pay_type': pay_type, 'out_trade_no': out_trade_no, 'txdtm': txdtm, 'goods_name':goods_name,'limit_pay':limit_pay,'udid':udid} req = urllib2.Request('https://openapi-test.qfpay.com/trade/v1/payment',urllib.urlencode(data)) req.add_header('X-QF-APPCODE', '钱方分配的app_code') req.add_header('X-QF-SIGN', make_req_sign(data, key)) resp = urllib2.urlopen(req) print resp.read() 应答参数说明： 参数名 说明 pay_type 支付类型 微信扫码:800201；支付宝扫码:800101 sysdtm 系统时间 txdtm 请求交易时间 格式为：YYYY-MM-MM HH:MM:SS resperr 信息描述 txamt 订单支付金额，单位分, 即100=$1 respmsg 调试信息 out_trade_no 外部订单号，开发者平台订单号； syssn 钱方订单号； qrcode 下单成功后返回，需商户自行进行二维码转换； respcd 返回码0000表示下单成功； 1143、1145表示交易中，需要继续查询交易结果， 其他返回码表示失败； 注：该请求结果为下单结果，根据返回参数arcode 商户自行转换二维码，用户扫码付款； 应答示例： { pay_type : 800201 , sysdtm : 2018-01-12 17:38:50 , cardcd : , txdtm : 2018-01-12 17:38:56 , resperr : \\u4ea4\\u6613\\u6210\\u529f , txcurrcd : CNY , txamt : 1 , respmsg : , out_trade_no : 13014597457448787530052 , syssn : 20180112000100020001659801 , qrcode : weixin://wxpay/bizpayurl?pr=hBvNxhc , respcd : 0000 } 支付成功后，接收异步通知 特殊说明: 异步通知有可能由于外部因素会造成延迟，所以对实时要求高的场景请使用订单查询接口！由于安全原因，异步通知仅支持80和443端口，不支持自定义端口。", 
            "title": "请求支付接口"
        }, 
        {
            "location": "wechat-account/", 
            "text": "微信公众号支付 # 场景说明：该支付场景只允许在微信环境内的h5手机网页调起支付，不可在公众号内调用该支付。若商户有需求用户可以在公众号内发起支付，商户需进行实名，实名生效后支付流程需参阅实名公众号支付，实名后允许商户在实名的公众号内调用该支付； 获取微信oauth的code # 基本请求信息： 请求方式 Http的Get方式 请求地址 /tool/v1/get_weixin_oauth_code 描述信息 获取微信oauth的code，注意这里的app_code与sign放在get参数里而不是http头中。用户需在微信环境内请求该URL地址。 请求参数说明： 参数名 是否必须 说明 app_code 是 开发者识别码，由钱方分配的app_code字符串参数信息 redirect_uri 是 回调地址，请求成功后，会重定向到该地址上，在地址get参数中获取code。 该地址做备案，仅在请求时做encode处理。 mchid 是 子商户号，标识子商户身份，由钱方分配（渠道系统后台查看对应商户(非业务员)子商户号，被视为对应商户的交易）。 sign 是 根据统一签名方式得到的签名 请求示例： https://openapi-test.qfpay.com/tool/v1/get_weixin_oauth_code?app_code=4A7D18AF8496425193E510DEC8E9526F redirect_uri=http://test.qfpay.com/get_code7 mchid=ZKWjSzbb sign=3F4EED65F68FD5FA0C0AE5794A3AB6D9 获取openid # 说明：每次调用支付，需完整走流程 获取微信oauth_code 和 获取openid 步骤。 基本请求信息： 请求方式 Http的Get方式 请求地址 /tool/v1/get_weixin_openid 描述信息 获取openid，这里X-QF-APPCODE与X-QF-SIGN要放在http头中。 请求参数说明： 参数名 是否必须 说明 code 是 oauth_code上一步获取的code，同一code不可重复使用。 mchid 是 子商户号，标识子商户身份，由钱方统一分配（可进入渠道后台对应商户查看）。 应答参数说明： 参数名 说明 openid 微信的openid，不同用户对应的openid不同。 请求支付接口 # 基本请求信息： 请求方式 Http的Post方式 请求地址 /trade/v1/payment 描述信息 发起消费交易接口 请求参数说明： 参数名 是否必须 说明 txamt 是 订单支付金额，单位分, 即100=$1 txcurrcd 是 币种 港币：HKD ；人民币：CNY；日元：JPY；美元：USD；迪拉姆：AED；泰铢：THB； pay_type 是 支付类型 微信公众号支付:800207。 out_trade_no 是 外部订单号，开发者平台订单号，同子商户（mchid）下，每次成功调用支付（含退款）接口下单，该参数值均不能重复使用，保证单号唯一，长度不超过128字符。 txdtm 是 请求交易时间 格式为：格式为：YYYY-MM-DD HH:MM:SS sub_openid 是 微信的openid，在上一步骤中获取。 goods_name 是 商品名称标示，建议不超过20字，不含英文逗号等特殊字符。 mchid 是 子商户号，标识子商户身份，由钱方分配（渠道系统后台查看对应商户(非业务员)子商户号，被视为对应商户的交易）。 txzone 否 时区，用于记录本地下单时间，默认为北京时间+0800 return_url 否 支付成功后的订单异步回调地址。 limit_pay 否 该参数值指定为no_credit，则禁止使用信用卡支付 udid 否 设备唯一id 应答参数说明： 参数名 说明 pay_type 支付类型 微信公众号支付:800207 sysdtm 系统时间 txdtm 请求交易时间 格式为：YYYY-MM-DD HH:MM:SS resperr 信息描述 txcurrcd 币种 港币：HKD ；人民币：CNY txamt 订单支付金额，单位分, 即100=$1 respmsg 调试信息。 out_trade_no 外部订单号，开发者平台订单号。 syssn 钱方订单号。 respcd 请求下单结果返回码,0000表示下单成功； 1143、1145表示交易中，需要继续查询交易结果； 其他返回码表示失败。 pay_params 唤起微信支付的参数，详见以下示例中pay_params 应答示例 { pay_type : 800207 , sysdtm : 2018-01-15 10:45:44 , cardcd : , txdtm : 2018-01-15 10:45:43 , resperr : \\u4ea4\\u6613\\u6210\\u529f , txcurrcd : CNY , txamt : 1 , respmsg : , out_trade_no : 13054541930052 , syssn : 20180115000100020001689938 , respcd : 0000 , pay_params : { package : prepay_id=wx20180115104545871fa226d10608087535 , timeStamp : 1515984345463 , signType : MD5 , paySign : E75ED8747CFB0F00DEDBD97FB8D92E9E , appId : wx290ce4878c94369d , nonceStr : 1515984345463 } } 唤起微信支付 # 返回参数pay_params字段如下： { package : prepay_id=wx20180115104545871fa226d10608087535 , timeStamp : 1515984345463 , signType : MD5 , paySign : E75ED8747CFB0F00DEDBD97FB8D92E9E , appId : wx290ce4878c94369d , nonceStr : 1515984345463 } 跳转到支付页面 说明：直接get相关参数到页面，该步骤http头部不需要定义X-QF-APPCODE与X-QF-SIGN参数。 基本请求信息： 请求地址 https://o2.qfpay.com/q/direct 描述信息 获取支付参数后get参数到该指定页面完成支付。 请求参数说明： 参数名 是否必须 说明 mchntnm 是 自定义商户名，若为汉字需urlencode该参数 txamt 是 订单支付金额，单位分, 即100=$1 goods_name 是 自定义商品名称，若为汉字需urlencode该参数 redirect_url 是 完成后跳转地址，（urlencode处理该参数） package 是 调用支付接口，微信返回参数 timeStamp 是 调用支付接口，微信返回参数 signType 是 调用支付接口，微信返回参数 paySign 是 调用支付接口，微信返回参数（urlencode处理该参数） appId 是 调用支付接口，微信返回参数 nonceStr 是 调用支付接口，微信返回参数 支付成功后，接收异步通知 特殊说明: 异步通知有可能由于外部因素会造成延迟，所以对实时要求高的场景请使用订单查询接口！由于安全原因，异步通知仅支持80和443端口，不支持自定义指定端口。 实名公众号支付 # 1、若商户完成钱方实名流程,实名生效后，将允许商户在实名的公众号内调用该支付方式，原有 公众号支付 流程会有改变，开发者需要向微信获取实名公众号的openid参数，具体可以参考微信文档，即： http://mp.weixin.qq.com/wiki/17/c0f37d5704f0b64713d5d2c37b468d75.html 2、用获取的openid请求钱方的订单支付接口/trade/v1/payment，与“微信公众号支付”的“请求支付接口”步骤一致，获取返回pay_params信息 3、不再到钱方指定页面（https://o2.qfpay.com/q/direct）发起收款，而是到商户实名申请时的“JSAPI支付授权目录”下页面发起收款，唤起微信支付。 详情请参考微信文档： https://pay.weixin.qq.com/wiki/doc/api/jsapi.php?chapter=7_7 index=6", 
            "title": "微信公众号支付"
        }, 
        {
            "location": "wechat-account/#_1", 
            "text": "场景说明：该支付场景只允许在微信环境内的h5手机网页调起支付，不可在公众号内调用该支付。若商户有需求用户可以在公众号内发起支付，商户需进行实名，实名生效后支付流程需参阅实名公众号支付，实名后允许商户在实名的公众号内调用该支付；", 
            "title": "微信公众号支付"
        }, 
        {
            "location": "wechat-account/#oauthcode", 
            "text": "基本请求信息： 请求方式 Http的Get方式 请求地址 /tool/v1/get_weixin_oauth_code 描述信息 获取微信oauth的code，注意这里的app_code与sign放在get参数里而不是http头中。用户需在微信环境内请求该URL地址。 请求参数说明： 参数名 是否必须 说明 app_code 是 开发者识别码，由钱方分配的app_code字符串参数信息 redirect_uri 是 回调地址，请求成功后，会重定向到该地址上，在地址get参数中获取code。 该地址做备案，仅在请求时做encode处理。 mchid 是 子商户号，标识子商户身份，由钱方分配（渠道系统后台查看对应商户(非业务员)子商户号，被视为对应商户的交易）。 sign 是 根据统一签名方式得到的签名 请求示例： https://openapi-test.qfpay.com/tool/v1/get_weixin_oauth_code?app_code=4A7D18AF8496425193E510DEC8E9526F redirect_uri=http://test.qfpay.com/get_code7 mchid=ZKWjSzbb sign=3F4EED65F68FD5FA0C0AE5794A3AB6D9", 
            "title": "获取微信oauth的code"
        }, 
        {
            "location": "wechat-account/#openid", 
            "text": "说明：每次调用支付，需完整走流程 获取微信oauth_code 和 获取openid 步骤。 基本请求信息： 请求方式 Http的Get方式 请求地址 /tool/v1/get_weixin_openid 描述信息 获取openid，这里X-QF-APPCODE与X-QF-SIGN要放在http头中。 请求参数说明： 参数名 是否必须 说明 code 是 oauth_code上一步获取的code，同一code不可重复使用。 mchid 是 子商户号，标识子商户身份，由钱方统一分配（可进入渠道后台对应商户查看）。 应答参数说明： 参数名 说明 openid 微信的openid，不同用户对应的openid不同。", 
            "title": "获取openid"
        }, 
        {
            "location": "wechat-account/#_2", 
            "text": "基本请求信息： 请求方式 Http的Post方式 请求地址 /trade/v1/payment 描述信息 发起消费交易接口 请求参数说明： 参数名 是否必须 说明 txamt 是 订单支付金额，单位分, 即100=$1 txcurrcd 是 币种 港币：HKD ；人民币：CNY；日元：JPY；美元：USD；迪拉姆：AED；泰铢：THB； pay_type 是 支付类型 微信公众号支付:800207。 out_trade_no 是 外部订单号，开发者平台订单号，同子商户（mchid）下，每次成功调用支付（含退款）接口下单，该参数值均不能重复使用，保证单号唯一，长度不超过128字符。 txdtm 是 请求交易时间 格式为：格式为：YYYY-MM-DD HH:MM:SS sub_openid 是 微信的openid，在上一步骤中获取。 goods_name 是 商品名称标示，建议不超过20字，不含英文逗号等特殊字符。 mchid 是 子商户号，标识子商户身份，由钱方分配（渠道系统后台查看对应商户(非业务员)子商户号，被视为对应商户的交易）。 txzone 否 时区，用于记录本地下单时间，默认为北京时间+0800 return_url 否 支付成功后的订单异步回调地址。 limit_pay 否 该参数值指定为no_credit，则禁止使用信用卡支付 udid 否 设备唯一id 应答参数说明： 参数名 说明 pay_type 支付类型 微信公众号支付:800207 sysdtm 系统时间 txdtm 请求交易时间 格式为：YYYY-MM-DD HH:MM:SS resperr 信息描述 txcurrcd 币种 港币：HKD ；人民币：CNY txamt 订单支付金额，单位分, 即100=$1 respmsg 调试信息。 out_trade_no 外部订单号，开发者平台订单号。 syssn 钱方订单号。 respcd 请求下单结果返回码,0000表示下单成功； 1143、1145表示交易中，需要继续查询交易结果； 其他返回码表示失败。 pay_params 唤起微信支付的参数，详见以下示例中pay_params 应答示例 { pay_type : 800207 , sysdtm : 2018-01-15 10:45:44 , cardcd : , txdtm : 2018-01-15 10:45:43 , resperr : \\u4ea4\\u6613\\u6210\\u529f , txcurrcd : CNY , txamt : 1 , respmsg : , out_trade_no : 13054541930052 , syssn : 20180115000100020001689938 , respcd : 0000 , pay_params : { package : prepay_id=wx20180115104545871fa226d10608087535 , timeStamp : 1515984345463 , signType : MD5 , paySign : E75ED8747CFB0F00DEDBD97FB8D92E9E , appId : wx290ce4878c94369d , nonceStr : 1515984345463 } }", 
            "title": "请求支付接口"
        }, 
        {
            "location": "wechat-account/#_3", 
            "text": "返回参数pay_params字段如下： { package : prepay_id=wx20180115104545871fa226d10608087535 , timeStamp : 1515984345463 , signType : MD5 , paySign : E75ED8747CFB0F00DEDBD97FB8D92E9E , appId : wx290ce4878c94369d , nonceStr : 1515984345463 } 跳转到支付页面 说明：直接get相关参数到页面，该步骤http头部不需要定义X-QF-APPCODE与X-QF-SIGN参数。 基本请求信息： 请求地址 https://o2.qfpay.com/q/direct 描述信息 获取支付参数后get参数到该指定页面完成支付。 请求参数说明： 参数名 是否必须 说明 mchntnm 是 自定义商户名，若为汉字需urlencode该参数 txamt 是 订单支付金额，单位分, 即100=$1 goods_name 是 自定义商品名称，若为汉字需urlencode该参数 redirect_url 是 完成后跳转地址，（urlencode处理该参数） package 是 调用支付接口，微信返回参数 timeStamp 是 调用支付接口，微信返回参数 signType 是 调用支付接口，微信返回参数 paySign 是 调用支付接口，微信返回参数（urlencode处理该参数） appId 是 调用支付接口，微信返回参数 nonceStr 是 调用支付接口，微信返回参数 支付成功后，接收异步通知 特殊说明: 异步通知有可能由于外部因素会造成延迟，所以对实时要求高的场景请使用订单查询接口！由于安全原因，异步通知仅支持80和443端口，不支持自定义指定端口。", 
            "title": "唤起微信支付"
        }, 
        {
            "location": "wechat-account/#_4", 
            "text": "1、若商户完成钱方实名流程,实名生效后，将允许商户在实名的公众号内调用该支付方式，原有 公众号支付 流程会有改变，开发者需要向微信获取实名公众号的openid参数，具体可以参考微信文档，即： http://mp.weixin.qq.com/wiki/17/c0f37d5704f0b64713d5d2c37b468d75.html 2、用获取的openid请求钱方的订单支付接口/trade/v1/payment，与“微信公众号支付”的“请求支付接口”步骤一致，获取返回pay_params信息 3、不再到钱方指定页面（https://o2.qfpay.com/q/direct）发起收款，而是到商户实名申请时的“JSAPI支付授权目录”下页面发起收款，唤起微信支付。 详情请参考微信文档： https://pay.weixin.qq.com/wiki/doc/api/jsapi.php?chapter=7_7 index=6", 
            "title": "实名公众号支付"
        }, 
        {
            "location": "wechat-mini/", 
            "text": "微信小程序支付 # 场景说明：该支付支持场景为，商户已有微信小程序，用户在商户的微信小程序内唤起微信支付直接输入密码支付 小程序实名 # 子商户使用小程序支付，需先联系业务人员，完成钱方的小程序实名流程。 注：子商户发起小程序支付，只能使用该实名的子商户调起小程序支付。 获取openid参数 # 实名生效后，自主通过商户实名的小程序获取openid参数，具体获取方式参考： https://mp.weixin.qq.com/debug/wxadoc/dev/api/api-login.html?t=20161122 请求支付接口 # 基本请求信息： 请求方式 Http的Post方式 请求地址 /trade/v1/payment 描述信息 发起消费交易接口 请求参数说明： 参数名 是否必须 说明 txamt 是 订单支付金额，单位分, 即100=$1 txcurrcd 是 币种 港币：HKD ；人民币：CNY；日元：JPY；美元：USD；迪拉姆：AED；泰铢：THB； pay_type 是 支付类型 微信小程序支付:800213。 out_trade_no 是 外部订单号，开发者平台订单号，同子商户（mchid）下，每次成功调用支付（含退款）接口下单，该参数值均不能重复使用，保证单号唯一，长度不超过128字符。 txdtm 是 请求交易时间 格式为：格式为：YYYY-MM-DD HH:MM:SS sub_openid 是 微信小程序的openid，在上一步骤中获取。 goods_name 是 商品名称标示，建议不超过20字，不含英文逗号等特殊字符。 mchid 是 子商户号，标识子商户身份，由钱方分配（渠道系统后台查看对应商户(非业务员)子商户号，被视为对应商户的交易）。 txzone 否 时区，用于记录本地下单时间，默认为北京时间+0800 return_url 否 支付成功后的订单异步回调地址。 limit_pay 否 该参数值指定为no_credit，则禁止使用信用卡支付 udid 否 设备唯一id 应答示例 { pay_type : 800213 , sysdtm : 2018-02-01 18:40:18 , cardcd : , txdtm : 2018-02-01 18:40:18 , resperr : \\u4ea4\\u6613\\u6210\\u529f , txcurrcd : CNY , txamt : 1 , respmsg : , out_trade_no : 20180201184018100000326 , syssn : 20180201000100020001881791 , respcd : 0000 , pay_params : { package : prepay_id=wx201802011840185d43f609cb0985252573 , timeStamp : 1517481618 , signType : MD5 , paySign : 5AB862AFB08B2545C7EE781C15408031 , appId : wx8f888cc1127fe645 , nonceStr : 56d07134614d4f55b18afeca6addd60d } } 唤起小程序支付 # 获取以上返回参数后，调起支付，具体可参考： https://pay.weixin.qq.com/wiki/doc/api/wxa/wxa_api.php?chapter=7_7 index=5 支付成功后，接收异步通知 特殊说明: 异步通知有可能由于外部因素会造成延迟，所以对实时要求高的场景请使用订单查询接口！由于安全原因，异步通知仅支持80和443端口，不支持自定义指定端口。", 
            "title": "微信小程序支付"
        }, 
        {
            "location": "wechat-mini/#_1", 
            "text": "场景说明：该支付支持场景为，商户已有微信小程序，用户在商户的微信小程序内唤起微信支付直接输入密码支付", 
            "title": "微信小程序支付"
        }, 
        {
            "location": "wechat-mini/#_2", 
            "text": "子商户使用小程序支付，需先联系业务人员，完成钱方的小程序实名流程。 注：子商户发起小程序支付，只能使用该实名的子商户调起小程序支付。", 
            "title": "小程序实名"
        }, 
        {
            "location": "wechat-mini/#openid", 
            "text": "实名生效后，自主通过商户实名的小程序获取openid参数，具体获取方式参考： https://mp.weixin.qq.com/debug/wxadoc/dev/api/api-login.html?t=20161122", 
            "title": "获取openid参数"
        }, 
        {
            "location": "wechat-mini/#_3", 
            "text": "基本请求信息： 请求方式 Http的Post方式 请求地址 /trade/v1/payment 描述信息 发起消费交易接口 请求参数说明： 参数名 是否必须 说明 txamt 是 订单支付金额，单位分, 即100=$1 txcurrcd 是 币种 港币：HKD ；人民币：CNY；日元：JPY；美元：USD；迪拉姆：AED；泰铢：THB； pay_type 是 支付类型 微信小程序支付:800213。 out_trade_no 是 外部订单号，开发者平台订单号，同子商户（mchid）下，每次成功调用支付（含退款）接口下单，该参数值均不能重复使用，保证单号唯一，长度不超过128字符。 txdtm 是 请求交易时间 格式为：格式为：YYYY-MM-DD HH:MM:SS sub_openid 是 微信小程序的openid，在上一步骤中获取。 goods_name 是 商品名称标示，建议不超过20字，不含英文逗号等特殊字符。 mchid 是 子商户号，标识子商户身份，由钱方分配（渠道系统后台查看对应商户(非业务员)子商户号，被视为对应商户的交易）。 txzone 否 时区，用于记录本地下单时间，默认为北京时间+0800 return_url 否 支付成功后的订单异步回调地址。 limit_pay 否 该参数值指定为no_credit，则禁止使用信用卡支付 udid 否 设备唯一id 应答示例 { pay_type : 800213 , sysdtm : 2018-02-01 18:40:18 , cardcd : , txdtm : 2018-02-01 18:40:18 , resperr : \\u4ea4\\u6613\\u6210\\u529f , txcurrcd : CNY , txamt : 1 , respmsg : , out_trade_no : 20180201184018100000326 , syssn : 20180201000100020001881791 , respcd : 0000 , pay_params : { package : prepay_id=wx201802011840185d43f609cb0985252573 , timeStamp : 1517481618 , signType : MD5 , paySign : 5AB862AFB08B2545C7EE781C15408031 , appId : wx8f888cc1127fe645 , nonceStr : 56d07134614d4f55b18afeca6addd60d } }", 
            "title": "请求支付接口"
        }, 
        {
            "location": "wechat-mini/#_4", 
            "text": "获取以上返回参数后，调起支付，具体可参考： https://pay.weixin.qq.com/wiki/doc/api/wxa/wxa_api.php?chapter=7_7 index=5 支付成功后，接收异步通知 特殊说明: 异步通知有可能由于外部因素会造成延迟，所以对实时要求高的场景请使用订单查询接口！由于安全原因，异步通知仅支持80和443端口，不支持自定义指定端口。", 
            "title": "唤起小程序支付"
        }
    ]
}